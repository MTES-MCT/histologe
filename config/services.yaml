    # This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

imports:
    - { resource: 'app/widgets.yaml'}
    - { resource: 'app/insee.yaml'}
    - { resource: 'app/nondecence.yaml'}
    - { resource: 'app/documents.yaml'}
    - { resource: 'app/competences.yaml'}
    - { resource: 'app/suivi_messages.yaml'}
    - { resource: 'app/cron_scheduler.yaml'}
    - { resource: 'app/export_pdf.yaml'}
parameters:
    .container.dumper.inline_factories: true
    uploads_dir: '%kernel.project_dir%/uploaded_files/signalement/'
    uploads_tmp_dir: '%kernel.project_dir%/tmp/'
    bucket_tmp_dir: 'tmp/'
    url_bucket: '%env(resolve:S3_URL_BUCKET)%'
    capture_dir: '%kernel.project_dir%/uploaded_files/capture/'
    images_dir: '%kernel.project_dir%/public/img/'
    mail_attachment_dir: '%kernel.project_dir%/templates/emails/attachment/'
    admin_email: '%env(resolve:ADMIN_EMAIL)%'
    notifications_email: '%env(resolve:NOTIFICATIONS_EMAIL)%'
    contact_email: '%env(resolve:CONTACT_EMAIL)%'
    user_system_email: '%env(resolve:USER_SYSTEM_EMAIL)%'
    host_url: '%env(resolve:HISTOLOGE_URL)%'
    token_lifetime: '1 day'
    cron_enable: '%env(bool:CRON_ENABLE)%'
    mail_enable: '%env(bool:MAIL_ENABLE)%'
    feature_ask_visite: '%env(FEATURE_ASK_VISITE_ENABLE)%'
    feature_new_form: '%env(bool:FEATURE_NEW_FORM_ENABLE)%'
    platform_name: 'Histologe'
    matomo_enable: '%env(bool:MATOMO_ENABLE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    App\EventListener\RequestListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request' }
#            - { name: 'kernel.event_listener', event: 'kernel.controller', method: onKernelController }
        arguments:
            - '@security.untracked_token_storage'
            - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'

    App\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\EventListener\SeoPageNotFoundRedirectListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request' }

    App\Command\GetGeolocCommand:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@Symfony\Contracts\HttpClient\HttpClientInterface'

    Aws\S3\S3Client:
        arguments:
            - endpoint: '%env(resolve:S3_ENDPOINT)%'
              version: 'latest'
              region: 'GRA'
              credentials:
                  key: '%env(resolve:S3_KEY)%'
                  secret: '%env(resolve:S3_SECRET)%'

    App\Manager\ManagerInterface:
        alias: App\Manager\Manager
        public: true

    App\Service\Token\TokenGeneratorInterface:
        alias: App\Service\Token\TokenGenerator

    App\Repository\SignalementRepository:
        arguments:
            $params: '%special_territory%'

    App\Repository\NotificationRepository:
        arguments:
            $params: '%special_territory%'

    App\Service\DashboardWidget\WidgetDataManagerInterface:
        alias: App\Service\DashboardWidget\WidgetDataManager

    App\Service\DashboardWidget\WidgetDataManagerCache:
        decorates: App\Service\DashboardWidget\WidgetDataManager

    App\Serializer\SignalementDraftRequestNormalizer:
        tags: [ 'serializer.normalizer' ]

    App\Serializer\SignalementDraftRequestSerializer:
        arguments:
            $normalizers:
                - '@App\Serializer\SignalementDraftRequestNormalizer'
    Intervention\Image\ImageManager:

when@test:
    parameters:
        uploads_tmp_dir: '%kernel.project_dir%/tmp/'
        url_bucket: '/app/public/img'

    services:
        App\Service\Mailer\Mail\Account\AccountTransferMailer:
            public: true
            arguments:
                $mailer: '@Symfony\Component\Mailer\MailerInterface'
                $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'
                $logger: '@Psr\Log\LoggerInterface'
                $urlGenerator: '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
                $loginLinkHandler: '@security.authenticator.login_link_handler.main'
            tags:
                - name: 'app.notification_mailer'
