    # This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

imports:
    - { resource: 'app/widgets.yaml' }
    - { resource: 'app/documents.yaml'}
    - { resource: 'app/competences.yaml'}
    - { resource: 'app/suivi_messages.yaml'}
    - { resource: 'app/cron_scheduler.yaml'}
    - { resource: 'app/csp.yaml'}
parameters:
    .container.dumper.inline_factories: true
    uploads_dir: '%kernel.project_dir%/uploaded_files/signalement/'
    uploads_tmp_dir: '%kernel.project_dir%/tmp/'
    bucket_tmp_dir: 'tmp/'
    url_bucket: '%env(resolve:S3_URL_BUCKET)%'
    capture_dir: '%kernel.project_dir%/uploaded_files/capture/'
    images_dir: '%kernel.project_dir%/public/img/'
    file_dir: '%kernel.project_dir%/public/build/files/'
    admin_email: '%env(resolve:ADMIN_EMAIL)%'
    notifications_email: '%env(resolve:NOTIFICATIONS_EMAIL)%'
    contact_email: '%env(resolve:CONTACT_EMAIL)%'
    user_system_email: '%env(resolve:USER_SYSTEM_EMAIL)%'
    reply_to_email: '%env(resolve:REPLY_TO_EMAIL)%'
    host_url: '%env(resolve:APP_URL)%'
    token_lifetime: '1 day'
    cron_enable: '%env(bool:CRON_ENABLE)%'
    mail_enable: '%env(bool:MAIL_ENABLE)%'
    csp_enable: '%env(bool:CSP_ENABLE)%'
    feature_oilhi_enable: '%env(bool:FEATURE_OILHI_ENABLE)%'
    platform_name: '%env(resolve:PLATFORM_NAME)%'
    platform_logo: '%env(resolve:PLATFORM_LOGO)%'
    matomo_enable: '%env(bool:MATOMO_ENABLE)%'
    matomo_site_id: '%env(resolve:MATOMO_SITE_ID)%'
    maintenance_enable: '%env(bool:MAINTENANCE_ENABLE)%'
    maintenance_banner_enable: '%env(bool:MAINTENANCE_BANNER_ENABLE)%'
    maintenance_banner_message: '%env(resolve:MAINTENANCE_BANNER_MESSAGE)%'
    idoss_username: '%env(resolve:IDOSS_USERNAME)%'
    idoss_password: '%env(resolve:IDOSS_PASSWORD)%'
    feature_anonymize_expired_account: '%env(bool:FEATURE_ANONYMIZE_EXPIRED_ACCOUNT)%'
    cgu_current_version: '05/06/2024'
    delay_min_check_new_signalement_files: '%env(DELAY_MIN_CHECK_NEW_SIGNALEMENT_FILES)%'
    albert_api_key: '%env(ALBERT_API_KEY)%'
    standard_max_list_pagination: 50
    feature_bo_signalement_create: '%env(bool:FEATURE_BO_SIGNALEMENT_CREATE)%'
    send_error_email_token: '%env(SEND_ERROR_EMAIL_TOKEN)%'
    feature_banner_histologe: '%env(bool:FEATURE_BANNER_HISTOLOGE)%'
    feature_suivi_action: '%env(bool:FEATURE_SUIVI_ACTION)%'
    proconnect_scheme_protocol: '%env(resolve:PROCONNECT_SCHEME_PROTOCOL)%'
    proconnect_domain: '%env(resolve:PROCONNECT_DOMAIN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Service/Mailer/Mail/AbstractNotificationMailer.php'


    App\EventListener\ContentSecurityPolicyListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    App\EventListener\AuthentificationHistoryListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }
            - { name: 'kernel.event_listener', event: 'scheb_two_factor.authentication.success' }

    App\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\EventListener\RequestApiExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }


    App\EventListener\SecurityApiExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\EventListener\SeoPageNotFoundRedirectListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request' }

    App\EventListener\MaintenanceListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 10 }

    App\EventListener\EntitySanitizerListener:
        arguments:
            $htmlSanitizer: '@html_sanitizer.sanitizer.app.message_sanitizer'
            $logger: '@logger'
        tags:
            - { name: doctrine.orm.entity_listener }

    Aws\S3\S3Client:
        arguments:
            - endpoint: '%env(resolve:S3_ENDPOINT)%'
              version: 'latest'
              region: 'GRA'
              credentials:
                  key: '%env(resolve:S3_KEY)%'
                  secret: '%env(resolve:S3_SECRET)%'

    App\Manager\ManagerInterface:
        alias: App\Manager\Manager
        public: true

    App\Service\Token\TokenGeneratorInterface:
        alias: App\Service\Token\TokenGenerator

    App\Service\DashboardWidget\WidgetDataManagerInterface:
        alias: App\Service\DashboardWidget\WidgetDataManager

    App\Service\DashboardWidget\WidgetDataManagerCache:
        decorates: App\Service\DashboardWidget\WidgetDataManager

    App\Service\Interconnection\Esabora\EsaboraSCHSService:
        arguments:
            - '@App\Service\Interconnection\JobEventHttpClient'

    App\Service\Interconnection\Esabora\EsaboraSISHService:
        arguments:
            - '@App\Service\Interconnection\JobEventHttpClient'

    App\Service\Interconnection\Oilhi\HookZapierService:
        arguments:
            - '@App\Service\Interconnection\JobEventHttpClient'

    App\Serializer\SignalementDraftRequestNormalizer:
        tags: [ 'serializer.normalizer' ]

    App\Serializer\SignalementDraftRequestSerializer:
        arguments:
            $normalizers:
                - '@App\Serializer\SignalementDraftRequestNormalizer'
    Intervention\Image\ImageManager:

    App\Service\Signalement\DesordreTraitement\DesordreTraitementNuisibles:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_nuisibles_cafards' }
            - { name: 'desordre_traitement', key: 'desordres_logement_nuisibles_punaises' }
            - { name: 'desordre_traitement', key: 'desordres_logement_nuisibles_rongeurs' }
            - { name: 'desordre_traitement', key: 'desordres_logement_nuisibles_autres' }

    App\Service\Signalement\DesordreTraitement\DesordreTraitementPieces:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_aeration_aucune_aeration' }
            - { name: 'desordre_traitement', key: 'desordres_logement_chauffage_details_fenetres_permeables' }
            - { name: 'desordre_traitement', key: 'desordres_logement_chauffage_type_aucun' }
            - { name: 'desordre_traitement', key: 'desordres_logement_chauffage_details_difficultes_chauffage' }
            - { name: 'desordre_traitement', key: 'desordres_logement_chauffage_details_chauffage_KO' }
            - { name: 'desordre_traitement', key: 'desordres_logement_chauffage_details_chauffage_dangereux' }
            - { name: 'desordre_traitement', key: 'desordres_logement_securite_sol_glissant' }
            - { name: 'desordre_traitement', key: 'desordres_logement_securite_sol_dangereux' }
            - { name: 'desordre_traitement', key: 'desordres_logement_securite_balcons' }
            - { name: 'desordre_traitement', key: 'desordres_logement_lumiere_pas_lumiere' }
            - { name: 'desordre_traitement', key: 'desordres_logement_lumiere_pas_volets' }
            - { name: 'desordre_traitement', key: 'desordres_logement_proprete' }

    App\Service\Signalement\DesordreTraitement\DesordreBatimentSecuriteMursFissures:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_batiment_securite_murs_fissures' }

    App\Service\Signalement\DesordreTraitement\DesordreBatimentIsolationDernierEtageToit:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_batiment_isolation_dernier_etage_toit' }

    App\Service\Signalement\DesordreTraitement\DesordreBatimentIsolationInfiltrationEau:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_batiment_isolation_infiltration_eau' }  

    App\Service\Signalement\DesordreTraitement\DesordreBatimentSecuriteSol:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_batiment_securite_sol' }  

    App\Service\Signalement\DesordreTraitement\DesordreBatimentSecuriteEscalier:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_batiment_securite_escalier' }  

    App\Service\Signalement\DesordreTraitement\DesordreLogementAerationVentilationDefectueuse:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_aeration_ventilation_defectueuse' }  

    App\Service\Signalement\DesordreTraitement\DesordreLogementHumidite:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_humidite_piece_a_vivre' }  
            - { name: 'desordre_traitement', key: 'desordres_logement_humidite_cuisine' }  
            - { name: 'desordre_traitement', key: 'desordres_logement_humidite_salle_de_bain' }  

    App\Service\Signalement\DesordreTraitement\DesordreLogementSecuritePlomb:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_securite_plomb' }  

    App\Service\Signalement\DesordreTraitement\DesordreLogementElectriciteManquePrises:
        tags:
            - { name: 'desordre_traitement', key: 'desordres_logement_electricite_manque_prises' }

    _instanceof:
        App\Service\Signalement\DesordreTraitement\DesordreTraitementProcessor:
            tags: ['desordre_traitement']


    App\Service\Mailer\Mail\AbstractNotificationMailer:
        abstract: true
        autoconfigure: false
        calls:
            - setFailedEmailManager: [ '@App\Manager\FailedEmailManager' ]

    App\Service\Mailer\Mail\:
        resource: '../src/Service/Mailer/Mail/*'
        parent: App\Service\Mailer\Mail\AbstractNotificationMailer

when@test:
    parameters:
        uploads_tmp_dir: '%kernel.project_dir%/tmp/'
        url_bucket: '%kernel.project_dir%/public/img'

    services:
        App\Service\Mailer\Mail\Account\AccountTransferMailer:
            public: true
            arguments:
                $mailer: '@Symfony\Component\Mailer\MailerInterface'
                $parameterBag: '@Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface'
                $logger: '@Psr\Log\LoggerInterface'
                $urlGenerator: '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
                $userManager: '@App\Manager\UserManager'
            tags:
                - name: 'app.notification_mailer'
