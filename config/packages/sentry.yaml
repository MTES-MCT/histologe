when@prod:
    sentry:
        dsn: '%env(resolve:SENTRY_DSN)%'
        register_error_listener: false # Disables the ErrorListener to avoid duplicated log in sentry
        messenger:
            enabled: true # flushes Sentry messages at the end of each message handling
            capture_soft_fails: true # captures exceptions marked for retry too
        options:
          environment: '%env(resolve:SENTRY_ENVIRONMENT)%' # prod|staging
          # Specify a fixed sample rate:
          traces_sample_rate: '%env(float:SENTRY_TRACES_SAMPLE_RATE)%' # Between 0 and 1
        tracing:
          enabled: true
          dbal: # DB queries
            enabled: true
          cache: # cache pools
            enabled: true
          twig: # templating engine
            enabled: true
          http_client: # Symfony HTTP client
            enabled: true

    monolog:
      handlers:
        sentry:
          type: sentry
          level: !php/const Monolog\Logger::ERROR
          hub_id: Sentry\State\HubInterface

    services:
      Monolog\Processor\PsrLogMessageProcessor:
        tags: { name: monolog.processor, handler: sentry }


#        If you are using Monolog, you also need these additional configuration and services to log the errors correctly:
#        https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
#        register_error_listener: false

#        monolog:
#            handlers:
#                sentry:
#                    type: service
#                    id: Sentry\Monolog\Handler

#        services:
#            Sentry\Monolog\Handler:
#                arguments:
#                    $hub: '@Sentry\State\HubInterface'
#                    $level: !php/const Monolog\Logger::ERROR
#                    $bubble: false
